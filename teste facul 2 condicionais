1 - Crie um algoritmo que leia um nÃºmero e mostre se o mesmo Ã© positivo, negativo ou zero.

print("ler um numero")
num = int(input("digite um numero: "))
if num > 1:
    print("numero positivo!")
elif num == 0:
    print("nulo ou zero!")
else:
    print("negativo")
print("fim do programa!")


2 - Crie um algoritmo que leia um nÃºmero e mostre se o mesmo Ã© par ou Ã­mpar.

print("leia se o num Ã© par ou impar")
num = int(input("digite um numero: "))
resto = num % 2
if resto:
    print("impar")
else:
    print("par")
print("fim do programa! ")
print(resto)        #prova verdade do resto


3 - Crie um algoritmo que leia dois nÃºmeros e mostre o maior nÃºmero.

num1 = int(input("digite o primeiro numero: "))
num2 = int(input("digite o segundo numero: "))

if num1 > num2:
    print("primeiro numero Ã© maior!!! {}".format(num1))
elif num1 == num2:
    print("deu empate")
else:
    print("segundo numero Ã© maior!!! {}".format(num2))
print("fim")

4 - Crie um algoritmo que leia trÃªs nÃºmeros e mostre o maior nÃºmero.
    a - ðŸ‘¼ Desconsidere a hipÃ³tese de nÃºmeros iguais
    b - ðŸ˜ˆ Considere-a, para um problema mais difÃ­cil.

num1 = int(input("digite o primeiro numero: "))
num2 = int(input("digite o segundo numero: "))
num3 = int(input("digite o terceiro numero: "))
if num1 > num2 and num1 > num3:
    print("primeiro numero Ã© maior!!! {}".format(num1))
elif num1 < num2 and num2 > num3:
    print("segundo numero Ã© maior!!! {}".format(num2))
elif num1 < num3 and num2 < num3:
    print("terceiro numero Ã© maior!!! {}".format(num3))
else:
    print("empate!!! {},{},{}".format(num1,num2,num3))
print("fim")

5 - Crie um algoritmo que leia trÃªs nÃºmeros e mostre-os em ordem crescente.

num1 = int(input("digite o primeiro numero: "))
num2 = int(input("digite o segundo numero: "))
num3 = int(input("digite o terceiro numero: "))
lista = [num1,num2,num3]
lista = sorted(lista)
print(lista)


6 - Crie um algoritmo que leia um caractere e informe se o mesmo Ã© uma vogal ou nÃ£o.



7 - Crie um algoritmo que calcule e mostre o novo valor de um salÃ¡rio a partir das seguintes regras: salÃ¡rios de atÃ© R$ 1.000,00 inclusive recebem 30% de aumento, 
salÃ¡rios de atÃ© R$ 2.000,00 inclusive recebem 25%, salÃ¡rios de atÃ© R$ 3.000,00 inclusive recebem 20%, salÃ¡rios de atÃ© R$ 4.000,00 inclusive recebem 15% e 
salÃ¡rios acima de R$ 4.000,00 recebem 10%. 

print("hora de geral ganhar um aumento de salario!!!")
print("ATENÃ‡ÃƒO!!! o aumento Ã© proporcional ao salario do funcionario.")
sal = float(input("digite seu salario: "))
if sal <= 1000:
    print("ganha um aumento de 30%!!! ",sal + (sal * 30 /100))
elif sal > 1000 and sal <= 2000:
    print("ganha um aumento de 25%!!!", sal + (sal * 25 / 100))
elif sal > 2000 and sal <= 3000:
    print("ganha um aumento de 20%!!!", sal + (sal * 20 / 100))
elif sal > 3000 and sal <= 4000:
    print("ganha um aumento de 15%!!!", sal + (sal * 15 / 100))
else:
    print("ganha um aumento de 10%!!!", sal + (sal * 10 / 100))

print("fim do programa")

8 - Os endereÃ§os IP versÃ£o 4 sÃ£o divididos em cinco classes: A, B, C, D e E. Os endereÃ§os no intervalo de 0 a 127 sÃ£o classe A, 
de 128 a 191 sÃ£o classe B, de 192 a 223 sÃ£o classe C, de 224 a 239 sÃ£o classe D e a partir de 240 sÃ£o classe E. 



BONUS - Crie um algoritmo que leia o primeiro octeto, no formato decimal, de um endereÃ§o IP e informe a sua classe.



9 - Crie um algoritmo que receba um nÃºmero inteiro, que representa um determinado mÃªs do ano, e mostre o nome do mÃªs correspondente. Por exemplo, se for informado o nÃºmero 2, algoritmo deverÃ¡ exibir fevereiro. O algoritmo deve validar se a entrada estÃ¡ correta.



10 - Crie um algoritmo que valide uma data, formada por dia, mÃªs e ano. Por exemplo, a data 30/02 Ã© sempre invÃ¡lida; mas a data 29/02/2012 Ã© vÃ¡lida.



11 - [OlimpÃ­ada Brasileira de InformÃ¡tica 2018] Basquete de robÃ´s
A organizaÃ§Ã£o da OIBR, OlimpÃ­ada Internacional de Basquete de RobÃ´, estÃ¡ comeÃ§ando a ter problemas com dois times: os Bit Warriors e os Byte Bulls. Ã‰ que os robÃ´s desses times acertam quase todos os lanÃ§amentos, de qualquer posiÃ§Ã£o na quadra! Pensando bem, o jogo de basquete ficaria mesmo sem graÃ§a se jogadores conseguissem acertar qualquer lanÃ§amento, nÃ£o Ã© mesmo? Uma das medidas que a OIBR estÃ¡ implantando Ã© uma nova pontuaÃ§Ã£o para os lanÃ§amentos, de acordo com a distÃ¢ncia do robÃ´ para o inÃ­cio da quadra. A quadra tem 2000 centÃ­metros de comprimento, como na figura.

Dada a distÃ¢ncia D do robÃ´ atÃ© o inÃ­cio da quadra, onde estÃ¡ a cesta, a regra Ã© a seguinte:
    Se D â‰¤ 800, a cesta vale 1 ponto;
    Se 800 < D â‰¤ 1400, a cesta vale 2 pontos;
    Se 1400 < D â‰¤ 2000, a cesta vale 3 pontos.
A organizaÃ§Ã£o da OIBR precisa de ajuda para automatizar o placar do jogo. Dado o valor da distÃ¢ncia D, escreva um programa para calcular o nÃºmero de pontos do lanÃ§amento.

Entrada: A primeira e Ãºnica linha da entrada contÃ©m um inteiro D indicando a distÃ¢ncia do robÃ´ para o inÃ­cio da quadra, em centÃ­metros, no momento do lanÃ§amento.

SaÃ­da: Seu programa deve produzir uma Ãºnica linha, contendo um inteiro, 1, 2 ou 3, indicando a pontuaÃ§Ã£o do lanÃ§amento.
RestriÃ§Ãµes: 0 â‰¤ D â‰¤ 2000
Exemplos:
Entrada - saida
1720    -  3
250     -  1
1400    -  2




12 - (Python Brasil) FaÃ§a um Programa para um caixa eletrÃ´nico. O programa deverÃ¡ perguntar ao usuÃ¡rio o valor do saque e depois informar quantas notas de cada valor serÃ£o fornecidas. As notas disponÃ­veis serÃ£o as de 1, 5, 10, 50 e 100 reais. O valor mÃ­nimo Ã© de 10 reais e o mÃ¡ximo de 600 reais. O programa nÃ£o deve se preocupar com a quantidade de notas existentes na mÃ¡quina.
  Exemplo 1: Para sacar a quantia de 256 reais, o programa fornece duas notas de 100, uma nota de 50, uma nota de 5 e uma nota de 1;
  Exemplo 2: Para sacar a quantia de 399 reais, o programa fornece trÃªs notas de 100, uma nota de 50, quatro notas de 10, uma nota de 5 e quatro notas de 1.
