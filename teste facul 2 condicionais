1 - Crie um algoritmo que leia um n√∫mero e mostre se o mesmo √© positivo, negativo ou zero.

print("ler um numero")
num = int(input("digite um numero: "))
if num > 1:
    print("numero positivo!")
elif num == 0:
    print("nulo ou zero!")
else:
    print("negativo")
print("fim do programa!")


2 - Crie um algoritmo que leia um n√∫mero e mostre se o mesmo √© par ou √≠mpar.

print("leia se o num √© par ou impar")
num = int(input("digite um numero: "))
resto = num % 2
if resto:
    print("impar")
else:
    print("par")
print("fim do programa! ")
print(resto)        #prova verdade do resto


3 - Crie um algoritmo que leia dois n√∫meros e mostre o maior n√∫mero.

num1 = int(input("digite o primeiro numero: "))
num2 = int(input("digite o segundo numero: "))

if num1 > num2:
    print("primeiro numero √© maior!!! {}".format(num1))
elif num1 == num2:
    print("deu empate")
else:
    print("segundo numero √© maior!!! {}".format(num2))
print("fim")

4 - Crie um algoritmo que leia tr√™s n√∫meros e mostre o maior n√∫mero.
    a - üëº Desconsidere a hip√≥tese de n√∫meros iguais
    b - üòà Considere-a, para um problema mais dif√≠cil.

num1 = int(input("digite o primeiro numero: "))
num2 = int(input("digite o segundo numero: "))
num3 = int(input("digite o terceiro numero: "))
if num1 > num2 and num1 > num3:
    print("primeiro numero √© maior!!! {}".format(num1))
elif num1 < num2 and num2 > num3:
    print("segundo numero √© maior!!! {}".format(num2))
elif num1 < num3 and num2 < num3:
    print("terceiro numero √© maior!!! {}".format(num3))
else:
    print("empate!!! {},{},{}".format(num1,num2,num3))
print("fim")

5 - Crie um algoritmo que leia tr√™s n√∫meros e mostre-os em ordem crescente.

num1 = int(input("digite o primeiro numero: "))
num2 = int(input("digite o segundo numero: "))
num3 = int(input("digite o terceiro numero: "))
lista = [num1,num2,num3]
lista = sorted(lista)
print(lista)


6 - Crie um algoritmo que leia um caractere e informe se o mesmo √© uma vogal ou n√£o.

print("inicio do programa!")
letra = str(input("digite uma letra: "))

if letra == 'a' or letra == 'A':
    print("√© vogal!")
    
elif letra == 'e' or letra == 'E':
    print("√© vogal!")
    
elif letra == 'i' or letra == 'I':
    print("√© vogal!")

elif letra == 'o' or letra == 'O':
    print("√© vogal!")
    
elif letra == 'u' or letra == 'U':
    print("√© vogal!")
    
else:
    print("n√£o √© vogal!")
    
print("fim do programa")

7 - Crie um algoritmo que calcule e mostre o novo valor de um sal√°rio a partir das seguintes regras: sal√°rios de at√© R$ 1.000,00 inclusive recebem 30% de aumento, 
sal√°rios de at√© R$ 2.000,00 inclusive recebem 25%, sal√°rios de at√© R$ 3.000,00 inclusive recebem 20%, sal√°rios de at√© R$ 4.000,00 inclusive recebem 15% e 
sal√°rios acima de R$ 4.000,00 recebem 10%. 

print("hora de geral ganhar um aumento de salario!!!")
print("ATEN√á√ÉO!!! o aumento √© proporcional ao salario do funcionario.")
sal = float(input("digite seu salario: "))
if sal <= 1000:
    print("ganha um aumento de 30%!!! ",sal + (sal * 30 /100))
elif sal > 1000 and sal <= 2000:
    print("ganha um aumento de 25%!!!", sal + (sal * 25 / 100))
elif sal > 2000 and sal <= 3000:
    print("ganha um aumento de 20%!!!", sal + (sal * 20 / 100))
elif sal > 3000 and sal <= 4000:
    print("ganha um aumento de 15%!!!", sal + (sal * 15 / 100))
else:
    print("ganha um aumento de 10%!!!", sal + (sal * 10 / 100))

print("fim do programa")

8 - Os endere√ßos IP vers√£o 4 s√£o divididos em cinco classes: A, B, C, D e E. Os endere√ßos no intervalo de 0 a 127 s√£o classe A, 
de 128 a 191 s√£o classe B, de 192 a 223 s√£o classe C, de 224 a 239 s√£o classe D e a partir de 240 s√£o classe E. 
Crie um algoritmo que leia o primeiro octeto, no formato decimal, de um endere√ßo IP e informe a sua classe.

print("inicio do programa!")
ip = int(input("digite um endere√ßo Ip: "))

if ip >= 0 and ip <= 127:
    print("√© da classe A!")
    
elif ip >= 128 and ip <= 191:
    print("√© da classe B!")
    
elif ip >= 192 and ip <= 223:
    print("√© da classe C!")

elif ip >= 224 and ip <= 239:
    print("√© da classe D!")
    
elif ip >= 240:
    print("√© da classe E!")
    
else:
    print("n√£o √© um ip valido!")
    
print("fim do programa")

9 - Crie um algoritmo que receba um n√∫mero inteiro, que representa um determinado m√™s do ano, e mostre o nome do m√™s correspondente. 
Por exemplo, se for informado o n√∫mero 2, algoritmo dever√° exibir fevereiro. O algoritmo deve validar se a entrada est√° correta.

print("inicio do programa!")
mes = int(input("digite um numero do m√™s: "))

if mes == 1:
    print("Janeiro")
    
elif mes == 2:
    print("Fevereiro")
    
elif mes == 3:
    print("Mar√ßo")

elif mes == 4:
    print("Abril")
    
elif mes == 5:
    print("Maio")
    
elif mes == 6:
    print("Junho")
    
elif mes == 7:
    print("Julho")
    
elif mes == 8:
    print("Agosto")
    
elif mes == 9:
    print("Setembro")
    
elif mes == 10:
    print("Outubro")
    
elif mes == 11:
    print("Novembro")
    
elif mes == 12:
    print("Dezembro")
    
else:
    print("n√£o √© um m√™s valido!")
    
print("fim do programa")

10 - Crie um algoritmo que valide uma data, formada por dia, m√™s e ano. Por exemplo, a data 30/02 √© sempre inv√°lida; mas a data 29/02/2012 √© v√°lida.

print("inicio do programa")

dia = int(input("digite o dia: "))
mes = int(input("digite o m√™s: "))
ano = int(input("digite o ano: "))

if mes == 2 and dia > 29:
    print("data invalido")
    
elif dia > 31:
    print("data invalida")
    
elif mes > 12:
    print("data invalida")
    
else:
    print("mes valido")
    
print(f"{dia}/{mes}/{ano}")

print("fim do programa")


11 - [Olimp√≠ada Brasileira de Inform√°tica 2018] Basquete de rob√¥s
A organiza√ß√£o da OIBR, Olimp√≠ada Internacional de Basquete de Rob√¥, est√° come√ßando a ter problemas com dois times: os Bit Warriors e os Byte Bulls. √â que os rob√¥s desses times acertam quase todos os lan√ßamentos, de qualquer posi√ß√£o na quadra! Pensando bem, o jogo de basquete ficaria mesmo sem gra√ßa se jogadores conseguissem acertar qualquer lan√ßamento, n√£o √© mesmo? Uma das medidas que a OIBR est√° implantando √© uma nova pontua√ß√£o para os lan√ßamentos, de acordo com a dist√¢ncia do rob√¥ para o in√≠cio da quadra. A quadra tem 2000 cent√≠metros de comprimento, como na figura.

Dada a dist√¢ncia D do rob√¥ at√© o in√≠cio da quadra, onde est√° a cesta, a regra √© a seguinte:
    Se D ‚â§ 800, a cesta vale 1 ponto;
    Se 800 < D ‚â§ 1400, a cesta vale 2 pontos;
    Se 1400 < D ‚â§ 2000, a cesta vale 3 pontos.
A organiza√ß√£o da OIBR precisa de ajuda para automatizar o placar do jogo. Dado o valor da dist√¢ncia D, escreva um programa para calcular o n√∫mero de pontos do lan√ßamento.

Entrada: A primeira e √∫nica linha da entrada cont√©m um inteiro D indicando a dist√¢ncia do rob√¥ para o in√≠cio da quadra, em cent√≠metros, no momento do lan√ßamento.

Sa√≠da: Seu programa deve produzir uma √∫nica linha, contendo um inteiro, 1, 2 ou 3, indicando a pontua√ß√£o do lan√ßamento.
Restri√ß√µes: 0 ‚â§ D ‚â§ 2000
Exemplos:
Entrada - saida
1720    -  3
250     -  1
1400    -  2

print("inicio do programa")
D = int(input("distanca da cesta: "))

if D >= 0 and D <= 800:
    print("Fez 1 ponto!")
    d = 1

elif D > 800 and D <= 1400:
    print("Fez 2 pontos!")
    d = 2
    
elif D >1400 and D <= 2000:
    print("Fez 3 pontos!")
    d = 3
    
else:
    print("fora da quadra!")


print(f"Distancia: {D}cm, Pontua√ß√£o: {d}")



print("fim do programa")


12 - (Python Brasil) Fa√ßa um Programa para um caixa eletr√¥nico. O programa dever√° perguntar ao usu√°rio o valor do saque e depois informar quantas notas de cada valor ser√£o fornecidas. As notas dispon√≠veis ser√£o as de 1, 5, 10, 50 e 100 reais. O valor m√≠nimo √© de 10 reais e o m√°ximo de 600 reais. O programa n√£o deve se preocupar com a quantidade de notas existentes na m√°quina.
  Exemplo 1: Para sacar a quantia de 256 reais, o programa fornece duas notas de 100, uma nota de 50, uma nota de 5 e uma nota de 1;
  Exemplo 2: Para sacar a quantia de 399 reais, o programa fornece tr√™s notas de 100, uma nota de 50, quatro notas de 10, uma nota de 5 e quatro notas de 1.


print("inicio do programa")

print ("o valor minimo para saque √© de 10,00 reais e o m√°ximo √© de 600,00 reais")
print("as notas disponiveis s√£o de: 1$, 5$, 10$, 50$ e 100$")
valor = int(input("digite o valor para saque: "))
if valor >= 10 and valor <= 600:
    print("processando pagamento!")
    cem = valor % 100
    cin = cem % 50
    dez = cin % 10
    ci = dez % 5
    um = ci % 1
    
    n100 = valor // 100
    n50 = cem // 50
    n10 = cin // 10
    n5 = dez // 5
    n1 = ci // 1
    
    print(f" {n100} nota de 100,00 e {n50} nota de 50,00 e {n10} nota de 10,00 e {n5} nota de 5,00 e {n1} nota de 1,00")
    
else:
    print("valor invalido")
    print("retire-se")


print("fim do programa")
